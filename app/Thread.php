<?php

namespace App;

use Illuminate\Database\Eloquent\Model;

class Thread extends Model
{
    //
    use RecordsActivity;
    protected $guarded = [];
    protected $with = ['creator','channel'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::deleting(function ($thread){
            $thread->replies->each->delete();
        });


    }

    public function channel()
    {
        return $this->belongsTo(Channel::class);
    }
    public function path()
    {
        return "/threads/{$this->channel->slug}/{$this->id}";
    }
    public function replies()
    {
        return $this->hasMany(Reply::class);
//            ->withCount('favorites')
//            ->with('owner');
    }

    public function creator()
    {
        return $this->belongsTo(User::class,'user_id');
    }

    public function addReply($reply)
    {
        return $this->replies()->create($reply);
    }

    public function scopeFilter($query,$filters)
    {
        return $filters->apply($query);
    }

    public function getReplyCountAttribute()
    {
        return $this->replies()->count();
    }

    public function subscribe($userId = null)
    {
       $this->subscriptions()->create([
           'user_id' => $userId ?: auth()->id()
       ]);
    }

    public function unsubscribe($userId = null)
    {
        $this->subscriptions()
            ->where('user_id' , $userId ?: auth()->id())
            ->delete();
    }
    public function subscriptions()
    {
       return $this->hasMany(ThreadSubscription::class);
    }

}
